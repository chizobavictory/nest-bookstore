{"ast":null,"code":"var _jsxFileName = \"/Users/echelon/Documents/GitHub/nest-bookstore/src/components/LoginModal.tsx\",\n  _s = $RefreshSig$();\nimport { Modal, ModalOverlay, ModalContent, ModalHeader, ModalCloseButton, ModalBody, ModalFooter, Button, FormControl, FormLabel, Input, useToast } from \"@chakra-ui/react\";\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginModal = ({\n  isOpen,\n  onClose\n}) => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const toast = useToast(); // Toast hook\n\n  const handleLogin = async () => {\n    try {\n      const response = await axios.post(\"https://nest-bookmarks-api.onrender.com/auth/login\", {\n        email,\n        password\n      });\n      console.log(response.data);\n      const token = response.data.access_token;\n      const user = response.data.user;\n      lo;\n      localStorage.setItem(\"token\", token);\n      // You may want to store the access token in your app's state or context\n\n      // Display success toast with the message from the backend\n      toast({\n        title: \"Login Successful\",\n        description: response.data.message || \"User login successful.\",\n        status: \"success\",\n        duration: 5000,\n        isClosable: true\n      });\n\n      // Close the modal\n      onClose();\n    } catch (error) {\n      var _error$response;\n      console.error(\"Error during login:\", error);\n      // Handle login error\n\n      // Display error toast with the message from the backend\n      toast({\n        title: \"Login Error\",\n        description: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data.message) || \"An error occurred during login. Please try again.\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: isOpen,\n    onClose: onClose,\n    children: [/*#__PURE__*/_jsxDEV(ModalOverlay, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalContent, {\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalCloseButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"email\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          mt: 4,\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          colorScheme: \"blue\",\n          mr: 3,\n          onClick: handleLogin,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: onClose,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginModal, \"0L5P7OH7nFo+eix1FyFE78pRNzE=\", false, function () {\n  return [useToast];\n});\n_c = LoginModal;\nexport default LoginModal;\nvar _c;\n$RefreshReg$(_c, \"LoginModal\");","map":{"version":3,"names":["Modal","ModalOverlay","ModalContent","ModalHeader","ModalCloseButton","ModalBody","ModalFooter","Button","FormControl","FormLabel","Input","useToast","React","useState","axios","jsxDEV","_jsxDEV","LoginModal","isOpen","onClose","_s","email","setEmail","password","setPassword","toast","handleLogin","response","post","console","log","data","token","access_token","user","lo","localStorage","setItem","title","description","message","status","duration","isClosable","error","_error$response","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","mt","colorScheme","mr","onClick","_c","$RefreshReg$"],"sources":["/Users/echelon/Documents/GitHub/nest-bookstore/src/components/LoginModal.tsx"],"sourcesContent":["import {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalCloseButton,\n  ModalBody,\n  ModalFooter,\n  Button,\n  FormControl,\n  FormLabel,\n  Input,\n  useToast,\n} from \"@chakra-ui/react\";\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\n\ninterface LoginModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n}\n\nconst LoginModal: React.FC<LoginModalProps> = ({ isOpen, onClose }) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const toast = useToast(); // Toast hook\n\n  const handleLogin = async () => {\n    try {\n      const response = await axios.post(\"https://nest-bookmarks-api.onrender.com/auth/login\", {\n        email,\n        password,\n      });\n\n      console.log(response.data);\n      const token = response.data.access_token;\n      const user = response.data.user;\n      lo\n      localStorage.setItem(\"token\", token);\n      // You may want to store the access token in your app's state or context\n\n      // Display success toast with the message from the backend\n      toast({\n        title: \"Login Successful\",\n        description: response.data.message || \"User login successful.\",\n        status: \"success\",\n        duration: 5000,\n        isClosable: true,\n      });\n\n      // Close the modal\n      onClose();\n    } catch (error: any) {\n      console.error(\"Error during login:\", error);\n      // Handle login error\n\n      // Display error toast with the message from the backend\n      toast({\n        title: \"Login Error\",\n        description: error.response?.data.message || \"An error occurred during login. Please try again.\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n      });\n    }\n  };\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClose}>\n      <ModalOverlay />\n      <ModalContent>\n        <ModalHeader>Login</ModalHeader>\n        <ModalCloseButton />\n        <ModalBody>\n          <FormControl>\n            <FormLabel>Email</FormLabel>\n            <Input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} />\n          </FormControl>\n          <FormControl mt={4}>\n            <FormLabel>Password</FormLabel>\n            <Input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\n          </FormControl>\n        </ModalBody>\n        <ModalFooter>\n          <Button colorScheme=\"blue\" mr={3} onClick={handleLogin}>\n            Login\n          </Button>\n          <Button onClick={onClose}>Cancel</Button>\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  );\n};\n\nexport default LoginModal;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}